{"ast":null,"code":"var _jsxFileName = \"/Users/privetsvuemlord/Documents/react/goit-react-hw-02-feedback/src/components/Statistics/Statistics.jsx\";\nimport PropTypes from \"prop-types\";\nimport { Title, List, Item } from \"./Staticstics.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Statistics = _ref => {\n  let {\n    good,\n    neutral,\n    bad,\n    total,\n    positivePercentage\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: [/*#__PURE__*/_jsxDEV(Item, {\n        children: [\"Good: \", good]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Item, {\n        children: [\"Neutral: \", neutral]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Item, {\n        children: [\"Bad: \", bad]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Item, {\n        children: [\"Total: \", total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Item, {\n        children: [\"Positive fedback: \", positivePercentage || 0, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Statistics;\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["/Users/privetsvuemlord/Documents/react/goit-react-hw-02-feedback/src/components/Statistics/Statistics.jsx"],"names":["PropTypes","Title","List","Item","Statistics","good","neutral","bad","total","positivePercentage","propTypes","number","isRequired"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,IAAtB,QAAkC,sBAAlC;;;AAEA,OAAO,MAAMC,UAAU,GAAG,QAAuD;AAAA,MAAtD;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,GAAjB;AAAsBC,IAAAA,KAAtB;AAA6BC,IAAAA;AAA7B,GAAsD;AAC/E,sBACE;AAAA,4BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA,8BACE,QAAC,IAAD;AAAA,6BAAaJ,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAA,gCAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,IAAD;AAAA,4BAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,IAAD;AAAA,8BAAcC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,IAAD;AAAA,yCAAyBC,kBAAkB,IAAI,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAYD,CAbM;KAAML,U;AAebA,UAAU,CAACM,SAAX,GAAuB;AACrBL,EAAAA,IAAI,EAAEL,SAAS,CAACW,MAAV,CAAiBC,UADF;AAErBN,EAAAA,OAAO,EAAEN,SAAS,CAACW,MAAV,CAAiBC,UAFL;AAGrBL,EAAAA,GAAG,EAAEP,SAAS,CAACW,MAAV,CAAiBC,UAHD;AAIrBJ,EAAAA,KAAK,EAAER,SAAS,CAACW,MAAV,CAAiBC,UAJH;AAKrBH,EAAAA,kBAAkB,EAAET,SAAS,CAACW,MAAV,CAAiBC;AALhB,CAAvB","sourcesContent":["import PropTypes from \"prop-types\";\nimport { Title, List, Item } from \"./Staticstics.styled\";\n\nexport const Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      <Title>Statistics</Title>\n      <List>\n        <Item>Good: {good}</Item>\n        <Item>Neutral: {neutral}</Item>\n        <Item>Bad: {bad}</Item>\n        <Item>Total: {total}</Item>\n        <Item>Positive fedback: {positivePercentage || 0}%</Item>\n      </List>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}