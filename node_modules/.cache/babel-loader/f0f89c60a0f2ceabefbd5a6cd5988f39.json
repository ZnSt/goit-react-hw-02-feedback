{"ast":null,"code":"var _jsxFileName = \"/Users/privetsvuemlord/Documents/react/goit-react-hw-02-feedback/src/components/App.jsx\";\nimport { Component } from \"react\";\nimport { Section } from \"./Section\";\nimport { Statistics } from \"./Statistics\";\nimport { Feedback } from \"./Feedback\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.setGood = () => {\n      this.setState(prevState => {\n        return {\n          good: prevState.good + 1\n        };\n      });\n    };\n\n    this.setNeutral = () => {\n      this.setState(prevState => {\n        return {\n          neutral: prevState.neutral + 1\n        };\n      });\n    };\n\n    this.setBad = () => {\n      this.setState(prevState => {\n        return {\n          bad: prevState.bad + 1\n        };\n      });\n    };\n\n    this.countTotalFeedback = () => {\n      return this.state.good + this.state.neutral + this.state.bad;\n    };\n\n    this.countPositiveFeedbackPernectagle = () => {\n      return this.state.good / this.countTotalFeedback() * 100;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: title,\n        children: /*#__PURE__*/_jsxDEV(Feedback, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/privetsvuemlord/Documents/react/goit-react-hw-02-feedback/src/components/App.jsx"],"names":["Component","Section","Statistics","Feedback","App","state","good","neutral","bad","setGood","setState","prevState","setNeutral","setBad","countTotalFeedback","countPositiveFeedbackPernectagle","render","title"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,QAAT,QAAyB,YAAzB;;;AACA,OAAO,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACjCK,KADiC,GACzB;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADyB;;AAAA,SAOjCC,OAPiC,GAOvB,MAAM;AACd,WAAKC,QAAL,CAAeC,SAAD,IAAe;AAC3B,eAAO;AACLL,UAAAA,IAAI,EAAEK,SAAS,CAACL,IAAV,GAAiB;AADlB,SAAP;AAGD,OAJD;AAKD,KAbgC;;AAAA,SAejCM,UAfiC,GAepB,MAAM;AACjB,WAAKF,QAAL,CAAeC,SAAD,IAAe;AAC3B,eAAO;AACLJ,UAAAA,OAAO,EAAEI,SAAS,CAACJ,OAAV,GAAoB;AADxB,SAAP;AAGD,OAJD;AAKD,KArBgC;;AAAA,SAuBjCM,MAvBiC,GAuBxB,MAAM;AACb,WAAKH,QAAL,CAAeC,SAAD,IAAe;AAC3B,eAAO;AACLH,UAAAA,GAAG,EAAEG,SAAS,CAACH,GAAV,GAAgB;AADhB,SAAP;AAGD,OAJD;AAKD,KA7BgC;;AAAA,SA+BjCM,kBA/BiC,GA+BZ,MAAM;AACzB,aAAO,KAAKT,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,OAA7B,GAAuC,KAAKF,KAAL,CAAWG,GAAzD;AACD,KAjCgC;;AAAA,SAmCjCO,gCAnCiC,GAmCE,MAAM;AACvC,aAAQ,KAAKV,KAAL,CAAWC,IAAX,GAAkB,KAAKQ,kBAAL,EAAnB,GAAgD,GAAvD;AACD,KArCgC;AAAA;;AAuCjCE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAEC,KAAhB;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,oBADF;AAQD;;AAhDgC","sourcesContent":["import { Component } from \"react\";\nimport { Section } from \"./Section\";\nimport { Statistics } from \"./Statistics\";\nimport { Feedback } from \"./Feedback\";\nexport class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  setGood = () => {\n    this.setState((prevState) => {\n      return {\n        good: prevState.good + 1,\n      };\n    });\n  };\n\n  setNeutral = () => {\n    this.setState((prevState) => {\n      return {\n        neutral: prevState.neutral + 1,\n      };\n    });\n  };\n\n  setBad = () => {\n    this.setState((prevState) => {\n      return {\n        bad: prevState.bad + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPernectagle = () => {\n    return (this.state.good / this.countTotalFeedback()) * 100;\n  };\n\n  render() {\n    return (\n      <>\n        <Section title={title}>\n          <Feedback />\n        </Section>\n        <Statistics />\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}